# dem bash completion script
# vim:ts=2:sw=2:et:

# main complete function
_dem()
{
  local cur="${COMP_WORDS[COMP_CWORD]}"

  COMPREPLY=()

  local i=0
  local max=0
  local skip=0
  while [ x${COMP_WORDS[$max]} != x ] ; do max=$((max+1)) ; done

  for i in `seq 1 $max` ; do
    if [ $skip -eq 1 ] ; then
      skip=0
      continue
    fi

    if [ "${COMP_WORDS[$i]:0:1}" == "-" ] ; then
      case "${COMP_WORDS[$i]:1:1}" in
      g)
        if [ $i -lt $max -a "${COMP_WORDS[$((i+1))]:0:1}" != "-" ] ; then
          skip=1
        fi
        ;;
      s)
        if [ $i -lt $max -a "${COMP_WORDS[$((i+1))]:0:1}" != "-" ] ; then
          skip=1
        fi
        ;;
      p)
        if [ $i -lt $max -a "${COMP_WORDS[$((i+1))]:0:1}" != "-" ] ; then
          skip=1
        fi
        ;;
      esac
    else
      break
    fi
  done

  local options="-r -p -s -c -f -j -?"

  if [ $i -le $max -a $i -gt $COMP_CWORD -a "$cur" == "-" ] ; then
    COMPREPLY=($(compgen -W "$options" -- "$cur"))
    return 0
  fi

  if [ $COMP_CWORD -lt $i ] ; then max=$i ; fi

  if [ $i -le $max -a $COMP_CWORD -le $max ] ; then
      case "${COMP_WORDS[$((COMP_CWORD-1))]:0:2}" in
      -g)
        if [ $i == $COMP_CWORD ] ; then
          COMPREPLY=($(compgen -W "local" -- "$cur"))
          return 0
        fi
      ;;
      -s)
        if [ $i == $COMP_CWORD ] ; then
          COMPREPLY=($(compgen -W "127.0.0.1" -- "$cur"))
          return 0
        fi
      ;;
      -p)
        if [ $i == $COMP_CWORD ] ; then
          COMPREPLY=($(compgen -W "22345" -- "$cur"))
          return 0
        fi
      ;;
      esac
      if [ "${cur:0:1}" == "-" -a ${#cur} -le 2 ] ; then
        COMPREPLY=($(compgen -W "$options" -- "$cur"))
        return 0
      fi
  fi


  local n="$((COMP_CWORD-i+1))"
  local lst="[]"
  local verb
  local obj

  COMPREPLY=("")

  if [ $n -eq 1 ] ; then
    lst=`${COMP_WORDS[0]} | grep "^  dem " | awk '{print $2}' | sort -u`
    if [ "${#lst}" -ne 0 ]; then
      COMPREPLY=($(compgen -W "$lst" -- "$cur"))
    fi
  elif [ $n -eq 2 ] ; then
    verb="${COMP_WORDS[$i]}"
    lst=`${COMP_WORDS[0]} | grep "^  dem $verb " | awk '{print $3}' | sort -u`
    if [ "${#lst}" -ne 0 ]; then
      COMPREPLY=($(compgen -W "$lst" -- "$cur"))
    fi
  elif [ $n -gt 2 ] ; then
    verb="${COMP_WORDS[$i]}"
    obj="${COMP_WORDS[$((i+1))]}"
    lst=(`${COMP_WORDS[0]} | grep "^  dem $verb $obj " | sed -e "s/^..dem [a-z]* [a-z]* //;s/{.*//;s/</[/g;s/>/]/g"`)
    n=$((n-3))
    if [ ${#lst[$n]} -ne 0 ] ; then
      COMPREPLY=($(compgen -W "${lst[$n]}" -- "$cur"))
    fi
  fi

  return 0
}

complete -F _dem -o default dem
